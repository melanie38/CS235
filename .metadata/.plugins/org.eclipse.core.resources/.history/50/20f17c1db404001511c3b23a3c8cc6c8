#pragma once
#include <iostream>
#include <string>
#include "StationInterface.h"
using namespace std;

class Station : public StationInterface
{
	public:
		Station()
		{
			headStation = NULL;
		}
		~Station(){}

		bool find(int car);

		//Part 1--------------------------------------------------------------
		bool addToStation(int car);
		int showCurrentCar();
		bool removeFromStation();

		//Part 2--------------------------------------------------------------
		virtual bool addToStack();
		virtual bool removeFromStack();
		virtual int showTopOfStack();
		virtual int showSizeOfStack();

		//Part 3--------------------------------------------------------------
		virtual bool addToQueue();
		virtual bool removeFromQueue();
		virtual int showTopOfQueue();
		virtual int showSizeOfQueue();

		//Part 4--------------------------------------------------------------
		virtual bool addToDequeLeft();
		virtual bool addToDequeRight();
		virtual bool removeFromDequeLeft();
		virtual bool removeFromDequeRight();
		virtual int showTopOfDequeLeft();
		virtual int showTopOfDequeRight();
		virtual int showSizeOfDeque();

	protected:
		struct Node
		{
			int data;
			Node* next;

			Node(int data, Node* next)
			{
				this->data = data;
				this->next = next;
			}
			~Node(){};
		};
		Node* headStation;
		Stack* temp;
};
